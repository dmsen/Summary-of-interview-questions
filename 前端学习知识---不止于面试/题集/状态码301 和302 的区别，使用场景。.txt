3XX系列
代表需要客户端采取进一步的操作才能完成请求，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的 Location 域中指明。这系列中最常见的有301、302状态码。
301和302都是重定向：即浏览器拿到该状态码后会重新跳转到一个新的url，这个新的url可以从响应的location首部中获取。

301的旧地址被永久删除（不能再访问了），搜索引擎在抓取到新的内容后会用新的url替换旧url，
302的旧地址还在（访问时只是暂时转移到新地址），搜索引擎会抓取新的内容后保存旧的url。

301：
被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。
如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。 　　
新的永久性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　
如果这不是一个 GET 或者 HEAD 请求，因此浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。
注意：对于某些使用 HTTP/1.0 协议的浏览器，当它们发送的 POST 请求得到了一个301响应的话，接下来的重定向请求将会变成 GET 方式。

302：
请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 
新的临时性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　
如果这不是一个 GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。

使用场景：
场景一 
        想换个域名，旧的域名不用啦，这样用户访问旧域名时用301就重定向到新的域名。其实也是告诉搜索引擎收录的域名需要对新          的域名进行收录。
场景二 
        登录后重定向到指定的页面，这种场景比较常见就是登录成功跳转到具体的系统页面。
场景三 
        有时候需要自动刷新页面，比如5秒后回到订单详细页面之类。
场景四 
        有时系统进行升级或者切换某些功能时，需要临时更换地址。
场景五 
        像微博之类的使用短域名，用户浏览后需要重定向到真实的地址之类。
场景六
        网页扩展名改变(如应用需要把.php改成.Html或.shtml)。
场景七
        当网站需要调整或者需要改变网页目录结构



HTTP中的301、302、303、307、308
结论
3XX开头的HTTP状态码都表示重定向的响应。
301、308是永久重定向；302、303、307是临时重定向。
301、302是http 1.0的内容，303、307、308是http1.1的内容。
301和302本来在规范中是不允许重定向时改变请求method的（将POST改为GET），实际许多浏览器实现的时候允许重定向时改变请求method。
303的出现是允许重定向时改变请求method。此外303响应禁止被缓存。307、308则不允许重定向时改变请求method。
RFC 7231规定：
301 Moved Permanently，永久重定向
302 Found
303 See Other
307 Temporary Redirect
RFC 7538规定：
308 Permanent Redirect 永久重定向
301、302搜索引擎处理区别
301表示搜索引擎在抓去新内容的同时，将旧的网址替换为重定向之后的网址；
302表示旧地址的资源仍存在，重定向时临时从A地址跳转到B地址，搜索引擎会抓取新的内容，并继续保存旧的网址。
临时重定向：302、303与307
结论
302允许各种各样的重定向，一般都实现为GET到GET重定向，但是不能确保POST会重定向为POST。
303只允许任意请求到GET的重定向。
307和302一样，但不允许POST到GET的重定向。
302 Found
302表示目标资源临时移动到了另一个URI上。由于重定向是临时发生的，所以客户端之后的请求中应该使用原本的URI。
响应header的Location会带上重定向的URI，浏览器可以使用Location中的URI进行自动重定向。
注意：由于历史原因，用户代理可能会在重定向后的请求中把POST方法改为GET。如果不想这样做，应该响应307（Temporary Redirect）状态码。
303 See Other
303表示服务器要将浏览器重定向到另一个资源，这个资源的URI会写在响应Header的Location字段。事实上，重定向到的资源并不是请求的资源，而是对请求资源的一些描述。
303 通常用于将POST请求重定向到GET请求。例如上传了一份个人信息，服务器返回303响应，将你导向一个上传成功页面。
303 不管原请求是什么方法，重定向请求的都是GET（或者HEAD）
303响应禁止被缓存。
307 Temporary Redirect
307的定义实际上和302是一致的，唯一区别在于，307状态码不允许浏览器将原本POST的请求重定向到GET请求上。
永久重定向：301、308
301 Moved Permanently
301表明目标资源被永久的移动到了一个新的URI，任何未来对这个资源的引用都应该使用新的URI。
308 Permanent Redirect
308与301定义一致，唯一的区别在于，308状态码不允许浏览器将原本为POST的请求重顶到GET请求上