　区别如下：

　　（1）、以函数声明的方法定义的函数，函数名是必须的，而函数表达式的函数名是可选的。

　　（2）、以函数声明的方法定义的函数，函数可以在函数声明之前调用，而函数表达式的函数只能在声明之后调用。

　　（3）、以函数声明的方法定义的函数并不是真正的声明，他们仅仅可以出现在全局中或者嵌套在其它函数中。

ECMAScript中，有两个最常用的创建函数对象的方法，即使用函数表达式或者使用函数声明。对此，ECMAScript规范明确了一点，即是，即函数声明 必须始终带有一个标识符（Identifier），也就是我们所说的函数名，而函数表达式则可以省略。说到这里，答案就不言而喻了(前一个是函数声明，后一个是函数表达式)。

　　也许有人会问那如果第二种方式也有函数名呢，比如这样，var bar = function boo(){};其实它还是函数表达式，因为它是赋值表达的一部分。

　　函数声明: 
　　　　function 函数名称 (参数：可选){ 函数体 } 
　　函数表达式： 
　　　　function 函数名称（可选）(参数：可选){ 函数体 } 

　　所以，可以看出，如果不声明函数名称，它肯定是表达式，可如果声明了函数名称的话，如何判断是函数声明还是函数表达式呢？ECMAScript是通过上下文来区分的，如果function boo(){}是作为赋值表达式的一部分的话，那它就是一个函数表达式，如果function boo(){}被包含在一个函数体内，或者位于程序的最顶部的话，那它就是一个函数声明。